name: Create Bump Pull Request

on:
  workflow_dispatch:
    inputs:
      tag:
        description: Ockam Tag To Update Homebrew To. e.g. ockam_v0.59.0
        required: true

permissions:
  # Allows us write to the repo
  contents: write
  # Actions permission allows us create pull requests.
  pull-requests: write

jobs:
  update_homebrew:
    name: Update Home Brew Version
    runs-on: ubuntu-20.04
    environment: release
    container:
      image: ghcr.io/build-trust/ockam-builder@sha256:a04b6a0aa01a93ba9a5c67392872893b261772dedfcd58f72a1addacf7535c09
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
        with:
          fetch-depth: 0

      - name: Download Github Release Files
        id: release_asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -x
          temp_dir=$(mktemp -d)
          cd $temp_dir
          gh release download ${{ github.event.inputs.tag }} -R ${{ github.repository_owner }}/ockam
          ls
          echo ::set-output name=dir::$temp_dir

      - name: Import GPG key
        id: import_gpg
        uses: hashicorp/ghaction-import-gpg@39fd2610ffed1823ef4e96f2a373cdecf464c0df
        env:
          GPG_PRIVATE_KEY: '${{ secrets.GPG_PRIVATE_KEY }}'
          PASSPHRASE: '${{ secrets.GPG_PASSPHRASE }}'

      - name: Add GPG Key
        run: |
          git config --global user.email "${{ secrets.GPG_EMAIL }}"
          git config --global user.name "${{ secrets.GPG_USER_NAME }}"
          git config --global user.signingkey "${{ steps.import_gpg.outputs.fingerprint }}"

      - name: Install Cosign
        uses: sigstore/cosign-installer@536b37ec5d5b543420bdfd9b744c5965bd4d8730

      - name: Confirm File Signature
        shell: bash
        env:
          PUB_KEY: '${{ secrets.COSIGN_PUBLIC_KEY }}'
        working-directory: ${{ steps.release_asset.outputs.dir }}
        run: |
          # Confirm SHASum256.txt file with cosign
          cosign verify-blob --key env://PUB_KEY --signature sha256sums.txt.sig sha256sums.txt || (echo "Failed verify check" && exit 1)

          # Ensure each file SHA is valid
          while read -r line; do
            echo $line | sha256sum -c;
          done < sha256sums.txt

      - name: Update File With Specified SHASum256
        shell: bash
        run: |
          set -x
          temp_dir=$(mktemp -d)
          cp .github/ockam.rb.template $temp_dir/ockam.rb
          cd $temp_dir

          while read -r line; do
            files=($line)
            if [[ ${files[1]} == *".so"* || ${files[1]} == *".sig"* ]]; then
              echo "elixir nif library found, skipping."
              continue
            fi

            sed -i "s/${files[1]}_sha256_value/${files[0]}/g" ockam.rb
          done < ${{ steps.release_asset.outputs.dir }}/sha256sums.txt

          sed -i "s/release_tag/${{ github.event.inputs.tag }}/g" ockam.rb

          cp ockam.rb $GITHUB_WORKSPACE/ockam.rb
          cat ockam.rb

      - name: Push Update
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_name="release_$(date +'%d-%m-%Y')"

          # Checkout to release branch
          git checkout -B ${release_name}
          git add ockam.rb
          git commit -S -m "Update to release ${{ github.event.inputs.tag }}"
          git push --set-upstream origin ${release_name}
